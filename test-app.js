import { spawn } from 'child_process'
import { fileURLToPath } from 'url'
import path from 'path'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

console.log('üöÄ Starting Study Companion App...')
console.log('üìÅ Working directory:', __dirname)

// Start the development server
const devServer = spawn('npm', ['run', 'dev'], {
  cwd: __dirname,
  stdio: 'pipe',
  shell: true
})

let serverStarted = false

devServer.stdout.on('data', (data) => {
  const output = data.toString()
  console.log(output)
  
  if (output.includes('Local:') || output.includes('localhost:5173')) {
    serverStarted = true
    console.log('\nüéâ SUCCESS! Study Companion is running!')
    console.log('üåê Open your browser and go to: http://localhost:5173')
    console.log('\n‚ú® Your world-class AI-powered Study Companion is ready!')
    console.log('\nüìö Features available:')
    console.log('   ‚úÖ User Authentication (Login/Register)')
    console.log('   ‚úÖ AI Question Generation (OpenAI, Groq, Gemini)')
    console.log('   ‚úÖ Study Session Timer')
    console.log('   ‚úÖ Subject Management')
    console.log('   ‚úÖ Goals Tracking')
    console.log('   ‚úÖ Analytics Dashboard')
    console.log('   ‚úÖ Spaced Repetition')
    console.log('   ‚úÖ Offline PWA Support')
    console.log('   ‚úÖ Beautiful UI with Animations')
    console.log('   ‚úÖ Dark/Light Mode')
    console.log('   ‚úÖ Mobile Responsive')
    console.log('\nüîß To stop the server: Press Ctrl+C')
  }
})

devServer.stderr.on('data', (data) => {
  const error = data.toString()
  console.error('Error:', error)
})

devServer.on('close', (code) => {
  if (!serverStarted) {
    console.log(`\n‚ùå Server exited with code ${code}`)
    console.log('üîß Try running: npm run dev')
  }
})

// Handle process termination
process.on('SIGINT', () => {
  console.log('\nüõë Stopping server...')
  devServer.kill()
  process.exit(0)
})

// Timeout after 30 seconds if server doesn't start
setTimeout(() => {
  if (!serverStarted) {
    console.log('\n‚è∞ Server startup timeout. Check for errors above.')
    devServer.kill()
    process.exit(1)
  }
}, 30000)
